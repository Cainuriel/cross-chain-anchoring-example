/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AnchorContract,
  AnchorContractInterface,
} from "../AnchorContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_thisChainName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_anchoredChainName",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "stateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "chainName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BlockAnchored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "anchorBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "anchoredBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "stateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "chainName",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anchoredChainName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blockByNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "stateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "chainName",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "getAnchoredBlock",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "chainName",
            type: "string",
          },
        ],
        internalType: "struct AnchorContract.BlockInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastAnchoredBlock",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "chainName",
            type: "string",
          },
        ],
        internalType: "struct AnchorContract.BlockInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "getLastNBlocks",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "chainName",
            type: "string",
          },
        ],
        internalType: "struct AnchorContract.BlockInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStats",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalAnchors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastAnchoredBlock",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_thisChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_anchoredChain",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastAnchoredBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "thisChainName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAnchors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161150b38038061150b83398101604081905261002f9161011b565b600080546001600160a01b03191633179055600161004d838261020d565b50600261005a828261020d565b5050506102cb565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261008957600080fd5b81516001600160401b038111156100a2576100a2610062565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d0576100d0610062565b6040528181528382016020018510156100e857600080fd5b60005b82811015610107576020818601810151838301820152016100eb565b506000918101602001919091529392505050565b6000806040838503121561012e57600080fd5b82516001600160401b0381111561014457600080fd5b61015085828601610078565b602085015190935090506001600160401b0381111561016e57600080fd5b61017a85828601610078565b9150509250929050565b600181811c9082168061019857607f821691505b6020821081036101b857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561020857806000526020600020601f840160051c810160208510156101e55750805b601f840160051c820191505b8181101561020557600081556001016101f1565b50505b505050565b81516001600160401b0381111561022657610226610062565b61023a816102348454610184565b846101be565b6020601f82116001811461026e57600083156102565750848201515b600019600385901b1c1916600184901b178455610205565b600084815260208120601f198516915b8281101561029e578785015182556020948501946001909201910161027e565b50848210156102bc5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611231806102da6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c80633858f5e7146100b457806338e36544146100c95780633fb00a37146100e5578063549a06c01461010557806365a1930d146101255780638da5cb5b1461012d5780639ffb463514610158578063ab1e742514610161578063b7e4516114610176578063c59d48471461019a578063d5460452146101b2578063f2ce940c146101ba578063f2fde38b146101cd575b600080fd5b6100c76100c2366004610d20565b6101e0565b005b6100d260055481565b6040519081526020015b60405180910390f35b6100f86100f3366004610d4c565b6104c3565b6040516100dc9190610df0565b610118610113366004610d4c565b6105fe565b6040516100dc9190610e0a565b6100f8610824565b600054610140906001600160a01b031681565b6040516001600160a01b0390911681526020016100dc565b6100d260065481565b610169610946565b6040516100dc9190610e6f565b610189610184366004610d4c565b6109d4565b6040516100dc959493929190610e82565b6101a2610a8d565b6040516100dc9493929190610eb8565b610169610bc3565b6101896101c8366004610d4c565b610bd0565b6100c76101db366004610ee9565b610c1b565b6000546001600160a01b031633146102135760405162461bcd60e51b815260040161020a90610f12565b60405180910390fd5b60055483116102735760405162461bcd60e51b815260206004820152602660248201527f456c20626c6f7175652079612066756520616e636c61646f206f20657320616e6044820152653a32b934b7b960d11b606482015260840161020a565b60006040518060a00160405280858152602001848152602001838152602001428152602001600280546102a590610f61565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610f61565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b50505091909252505060038054600181018255600091909152815160059091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810191825560208301517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c82015560408301517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d82015560608301517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e820155608083015192935083927fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f909101906104189082611000565b505050600084815260046020818152604092839020845181559084015160018201559183015160028301556060830151600383015560808301518392918201906104629082611000565b50505060058490556006805490600061047a836110d4565b919050555082847f56fc7a4eb9a3cdefa29adb0ea560e18cf1b5a77b5a9fc655f3c806ff62430573846002426040516104b5939291906110ed565b60405180910390a350505050565b6104cb610ceb565b600082815260046020526040812054900361051f5760405162461bcd60e51b8152602060048201526014602482015273426c6f717565206e6f20656e636f6e747261646f60601b604482015260640161020a565b600460008381526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201805461057590610f61565b80601f01602080910402602001604051908101604052809291908181526020018280546105a190610f61565b80156105ee5780601f106105c3576101008083540402835291602001916105ee565b820191906000526020600020905b8154815290600101906020018083116105d157829003601f168201915b5050505050815250509050919050565b60606000821161064b5760405162461bcd60e51b81526020600482015260186024820152770436f756e74206465626520736572206d61796f72206120360441b604482015260640161020a565b60006006541161066d5760405162461bcd60e51b815260040161020a90611188565b6000826006541161067f57600061068d565b8260065461068d91906111b9565b9050600083600654116106a2576006546106a4565b835b90506000816001600160401b038111156106c0576106c0610f9b565b6040519080825280602002602001820160405280156106f957816020015b6106e6610ceb565b8152602001906001900390816106de5790505b50905060005b8281101561081b57600361071382866111d2565b81548110610723576107236111e5565b90600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201805461077490610f61565b80601f01602080910402602001604051908101604052809291908181526020018280546107a090610f61565b80156107ed5780601f106107c2576101008083540402835291602001916107ed565b820191906000526020600020905b8154815290600101906020018083116107d057829003601f168201915b505050505081525050828281518110610808576108086111e5565b60209081029190910101526001016106ff565b50949350505050565b61082c610ceb565b60006006541161084e5760405162461bcd60e51b815260040161020a90611188565b6003805461085e906001906111b9565b8154811061086e5761086e6111e5565b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820180546108bf90610f61565b80601f01602080910402602001604051908101604052809291908181526020018280546108eb90610f61565b80156109385780601f1061090d57610100808354040283529160200191610938565b820191906000526020600020905b81548152906001019060200180831161091b57829003601f168201915b505050505081525050905090565b6002805461095390610f61565b80601f016020809104026020016040519081016040528092919081815260200182805461097f90610f61565b80156109cc5780601f106109a1576101008083540402835291602001916109cc565b820191906000526020600020905b8154815290600101906020018083116109af57829003601f168201915b505050505081565b600460208190526000918252604090912080546001820154600283015460038401549484018054939592949193610a0a90610f61565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3690610f61565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b5050505050905085565b60008060608060065460055460016002818054610aa990610f61565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad590610f61565b8015610b225780601f10610af757610100808354040283529160200191610b22565b820191906000526020600020905b815481529060010190602001808311610b0557829003601f168201915b50505050509150808054610b3590610f61565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6190610f61565b8015610bae5780601f10610b8357610100808354040283529160200191610bae565b820191906000526020600020905b815481529060010190602001808311610b9157829003601f168201915b50505050509050935093509350935090919293565b6001805461095390610f61565b60038181548110610be057600080fd5b9060005260206000209060050201600091509050806000015490806001015490806002015490806003015490806004018054610a0a90610f61565b6000546001600160a01b03163314610c455760405162461bcd60e51b815260040161020a90610f12565b6001600160a01b038116610c9b5760405162461bcd60e51b815260206004820181905260248201527f4e7565766120646972656363696f6e206e6f2070756564652073657220307830604482015260640161020a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060a0016040528060008152602001600080191681526020016000801916815260200160008152602001606081525090565b600080600060608486031215610d3557600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d5e57600080fd5b5035919050565b6000815180845260005b81811015610d8b57602081850181015186830182015201610d6f565b506000602082860101526020601f19601f83011685010191505092915050565b805182526020810151602083015260408101516040830152606081015160608301526000608082015160a06080850152610de860a0850182610d65565b949350505050565b602081526000610e036020830184610dab565b9392505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015610e6357603f19878603018452610e4e858351610dab565b94506020938401939190910190600101610e32565b50929695505050505050565b602081526000610e036020830184610d65565b85815284602082015283604082015282606082015260a060808201526000610ead60a0830184610d65565b979650505050505050565b848152836020820152608060408201526000610ed76080830185610d65565b8281036060840152610ead8185610d65565b600060208284031215610efb57600080fd5b81356001600160a01b0381168114610e0357600080fd5b6020808252602f908201527f536f6c6f20656c2070726f706965746172696f20707565646520656a6563757460408201526e30b91032b9ba3090333ab731b4b7b760891b606082015260800190565b600181811c90821680610f7557607f821691505b602082108103610f9557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610ffb57806000526020600020601f840160051c81016020851015610fd85750805b601f840160051c820191505b81811015610ff85760008155600101610fe4565b50505b505050565b81516001600160401b0381111561101957611019610f9b565b61102d816110278454610f61565b84610fb1565b6020601f82116001811461106157600083156110495750848201515b600019600385901b1c1916600184901b178455610ff8565b600084815260208120601f198516915b828110156110915787850151825560209485019460019092019101611071565b50848210156110af5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000600182016110e6576110e66110be565b5060010190565b83815260606020820152600080845461110581610f61565b8060608601526001821660008114611124576001811461114057611174565b60ff1983166080870152608082151560051b8701019350611174565b87600052602060002060005b8381101561116b5781548882016080015260019091019060200161114c565b87016080019450505b505050604092909201929092529392505050565b6020808252601790820152764e6f2068617920626c6f7175657320616e636c61646f7360481b604082015260600190565b818103818111156111cc576111cc6110be565b92915050565b808201808211156111cc576111cc6110be565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220deb388259af8bfb3535ab67b55510e19ad9c42eded9803c579a7316d2dd555ac64736f6c634300081c0033";

type AnchorContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnchorContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnchorContract__factory extends ContractFactory {
  constructor(...args: AnchorContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _thisChainName: string,
    _anchoredChainName: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _thisChainName,
      _anchoredChainName,
      overrides || {}
    );
  }
  override deploy(
    _thisChainName: string,
    _anchoredChainName: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _thisChainName,
      _anchoredChainName,
      overrides || {}
    ) as Promise<
      AnchorContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AnchorContract__factory {
    return super.connect(runner) as AnchorContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnchorContractInterface {
    return new Interface(_abi) as AnchorContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AnchorContract {
    return new Contract(address, _abi, runner) as unknown as AnchorContract;
  }
}
